const express = require('express');
const router = express.Router();
const sql = require('mssql');
const moment = require('moment');

// Authenticates that you have previously inputted a valid password by the time you have arrived here
function checkAuthentication(req, res, next) {
    if (req.session.authentication && req.session.authentication.authenticated) {
        next();
    }
    else { // Your password is invalid, send you back to checkout
        req.session.invalidPassword = true;
        res.redirect("/checkout");
    }
}

/* Start of utilities */

const createProductRows = (productList) => {
    return ``;
};

const writeOrders = (res, productList) => {

    let orderId = 1157;
    let customerId = 1;
    let customerName = 'Elias Pinno';

    res.write(
        `
        <table>
            <tr> 
                <th>Product Id</th> <th>Product Name</th> <th>Quantity</th> <th>Price</th> <th>Subtotal</th>
            </tr>
            ${createProductRows(productList)}
        </table>
        <h1>Order completed.  Will be shipped soon...</h1>
        <h1>Your order reference number is: ${orderId}</h1>
        <h1>Shipping to customer: ${customerId} Name: ${customerName}</h1>
                                            

        <h2><a href="shop.html">Back to Main Page</a></h2>
        `
    );

};
/* End of utilities */


router.get('/', checkAuthentication, function(req, res, next) {
    res.setHeader('Content-Type', 'text/html');
    res.write("<title>DBs and Dragons Grocery Order List</title>");

    // If the request has the product list, store it.
    let productList = false;
    if (req.session.productList && req.session.productList.length > 0) {
        productList = req.session.productList;
    }

    // If the request has the customer id, store it.
    let customerId = false;
    if (req.session.authentication && req.session.authentication.customerId) {
        customerId = req.session.authentication.customerId;
    }
    
    //req.session has session variables
    //req.query - get request data

    (async function() {
        try {
            let pool = await sql.connect(dbConfig);
            let sqlQuery = `
                SELECT 
                customerId,
                firstName,
                
                FROM customer
            `;


            for (let result of results.recordset) {

                const ps = new sql.PreparedStatement(pool);
                ps.input('param', sql.Int);
                await ps.prepare(subQuery);

                let subResults = await ps.execute({param: result.orderId});

                orderListData.push({'result': result, 'subResults': subResults.recordset});

            };

            writeOrders(res, orderListData);

        } catch(err) {
            console.dir(err);
            res.write(err)
        }
        finally {
            res.end();
        }
    })();

    /**
    Determine if valid customer id was entered
    Determine if there are products in the shopping cart
    If either are not true, display an error message
    **/

    /** Make connection and validate **/

    /** Save order information to database**/


        /**
        // Use retrieval of auto-generated keys.
        sqlQuery = "INSERT INTO <TABLE> OUTPUT INSERTED.orderId VALUES( ... )";
        let result = await pool.request()
            .input(...)
            .query(sqlQuery);
        // Catch errors generated by the query
        let orderId = result.recordset[0].orderId;
        **/

    /** Insert each item into OrderedProduct table using OrderId from previous INSERT **/

    /** Update total amount for order record **/

    /** For each entry in the productList is an array with key values: id, name, quantity, price **/

    /**
        for (let i = 0; i < productList.length; i++) {
            let product = products[i];
            if (!product) {
                continue;
            }
            // Use product.id, product.name, product.quantity, and product.price here
        }
    **/

    /** Print out order summary **/

    /** Clear session/cart **/

    res.end();
});

module.exports = router;
